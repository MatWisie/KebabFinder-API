{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "This is the API documentation for the project.",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Registration",
                "description": "Registers a new user and returns an authentication token.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/admin-login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Admin Login",
                "description": "Logs in an admin and returns an authentication token.",
                "operationId": "loginAdmin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/logout-from-all": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Logout",
                "description": "Logs out the currently authenticated user and invalidates their tokens.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/kebabs/{kebab}": {
            "get": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Get details of a specific kebab",
                "description": "Returns the details of a specific kebab including associated sauces, meat types, social media links, opening hours, and order methods.",
                "operationId": "32ee6dc78062fe1f2141b574aa0038b7",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "Kebab ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kebab details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Kebab"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kebab not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Update an existing kebab",
                "description": "Updates the details of an existing kebab along with its associated entities like sauces, meats, social media links, opening hours, and order methods.",
                "operationId": "2104d9fd92521b8652074c8057648d9d",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "Kebab ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "address",
                                    "coordinates",
                                    "status",
                                    "is_craft",
                                    "building_type",
                                    "is_chain"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the kebab",
                                        "type": "string"
                                    },
                                    "address": {
                                        "description": "The address of the kebab",
                                        "type": "string"
                                    },
                                    "coordinates": {
                                        "description": "Coordinates of the kebab (latitude,longitude)",
                                        "type": "string"
                                    },
                                    "logo_link": {
                                        "description": "URL of the logo (optional)",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "open_year": {
                                        "description": "Year the kebab opened (optional)",
                                        "type": "integer"
                                    },
                                    "closed_year": {
                                        "description": "Year the kebab closed (optional)",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "The status of the kebab",
                                        "type": "string",
                                        "enum": [
                                            "open",
                                            "closed",
                                            "planned"
                                        ]
                                    },
                                    "is_craft": {
                                        "description": "Whether the kebab is a craft kebab",
                                        "type": "boolean"
                                    },
                                    "building_type": {
                                        "description": "The type of building where the kebab is located",
                                        "type": "string"
                                    },
                                    "is_chain": {
                                        "description": "Whether the kebab is part of a chain",
                                        "type": "boolean"
                                    },
                                    "sauces": {
                                        "description": "List of sauce types associated with the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "meats": {
                                        "description": "List of meat types associated with the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "social_media_links": {
                                        "description": "Social media links for the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    },
                                    "opening_hours": {
                                        "description": "Opening hours for the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "order_ways": {
                                        "description": "Order methods for the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Kebab updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kebab updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Kebab not found"
                    },
                    "400": {
                        "description": "Invalid data provided"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Delete a kebab",
                "description": "Deletes a kebab by its ID.",
                "operationId": "118c8c495f6de8a0b5e119bc34fda9ca",
                "parameters": [
                    {
                        "name": "kebab",
                        "in": "path",
                        "description": "Kebab ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Kebab deleted successfully"
                    },
                    "404": {
                        "description": "Kebab not found"
                    }
                }
            }
        },
        "/api/kebabs": {
            "get": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Get a list of all kebabs",
                "description": "Returns a list of all kebabs along with their associated data.",
                "operationId": "f13582052e1a5f54f3290ffedc53507b",
                "responses": {
                    "200": {
                        "description": "List of kebabs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Kebab"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Kebabs"
                ],
                "summary": "Create a new kebab",
                "description": "Creates a new kebab with the provided data and associates related entities like sauces, meats, social media links, opening hours, and order methods.",
                "operationId": "695cc21d8dd138348f5947647c76d780",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "address",
                                    "status",
                                    "coordinates",
                                    "is_craft",
                                    "is_chain",
                                    "building_type",
                                    "sauces",
                                    "meats",
                                    "social_media_links",
                                    "opening_hours",
                                    "order_ways"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the kebab",
                                        "type": "string",
                                        "example": "Sample Kebab Place"
                                    },
                                    "address": {
                                        "description": "The address of the kebab",
                                        "type": "string",
                                        "example": "123 Kebab St, Kebab City"
                                    },
                                    "coordinates": {
                                        "description": "Coordinates of the kebab (latitude,longitude)",
                                        "type": "string",
                                        "example": "51.5074, -10.1278"
                                    },
                                    "logo_link": {
                                        "description": "URL of the logo (optional)",
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://example.com"
                                    },
                                    "open_year": {
                                        "description": "Year the kebab opened",
                                        "type": "integer",
                                        "example": 1999
                                    },
                                    "closed_year": {
                                        "description": "Year the kebab closed",
                                        "type": "integer",
                                        "example": 2020
                                    },
                                    "status": {
                                        "description": "The status of the kebab",
                                        "type": "string",
                                        "enum": [
                                            "open",
                                            "closed",
                                            "planned"
                                        ],
                                        "example": "open"
                                    },
                                    "is_craft": {
                                        "description": "Whether the kebab is a craft kebab",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "building_type": {
                                        "description": "The type of building where the kebab is located",
                                        "type": "string",
                                        "example": "domek"
                                    },
                                    "is_chain": {
                                        "description": "Whether the kebab is part of a chain",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sauces": {
                                        "description": "List of sauce types associated with the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "meats": {
                                        "description": "List of meat types associated with the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            2,
                                            4
                                        ]
                                    },
                                    "social_media_links": {
                                        "description": "Social media links for the kebab",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uri"
                                        },
                                        "example": [
                                            "https://facebook.com/samplekebab",
                                            "https://instagram.com/samplekebab"
                                        ]
                                    },
                                    "opening_hours": {
                                        "description": "Opening hours for the kebab",
                                        "type": "object",
                                        "example": {
                                            "monday": {
                                                "open": "10:00",
                                                "close": "22:00"
                                            },
                                            "tuesday": {
                                                "open": "10:00",
                                                "close": "22:00"
                                            },
                                            "wednesday": {
                                                "open": "10:00",
                                                "close": "22:00"
                                            },
                                            "thursday": {
                                                "open": "10:00",
                                                "close": "22:00"
                                            },
                                            "friday": {
                                                "open": "10:00",
                                                "close": "23:00"
                                            }
                                        },
                                        "additionalProperties": {
                                            "properties": {
                                                "open": {
                                                    "type": "string",
                                                    "example": "10:00"
                                                },
                                                "close": {
                                                    "type": "string",
                                                    "example": "22:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "order_ways": {
                                        "description": "Order methods for the kebab",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "app_name": {
                                                    "description": "The name of the app",
                                                    "type": "string",
                                                    "example": "UberEats"
                                                },
                                                "phone_number": {
                                                    "description": "Phone number for orders",
                                                    "type": "string",
                                                    "example": "123-456-789"
                                                },
                                                "website": {
                                                    "description": "Website URL for the app",
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://ubereats.com/samplekebab"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "app_name": "UberEats",
                                                "phone_number": "123-456-789",
                                                "website": "https://ubereats.com/samplekebab"
                                            },
                                            {
                                                "app_name": "DoorDash",
                                                "phone_number": null,
                                                "website": "https://doordash.com/samplekebab"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Kebab created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Kebab created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data provided"
                    }
                }
            }
        },
        "/api/user/first-login": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Check if the user is logging in for the first time",
                "description": "Check if the user is logged in for the first time.",
                "operationId": "03799da7396122b7a78855004a6cae04",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_first_login": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/{id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a user by ID",
                "description": "Delete a user by ID.",
                "operationId": "00c40b388d5872b75d9407acb493bf12",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the currently authenticated user",
                "description": "Get the currently authenticated user.",
                "operationId": "3671108ef08ef7ba13008db3dfd0a947",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all users",
                "description": "Get all users.",
                "operationId": "7dd4baaf77f85b1282854bf0aa281464",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/change-username": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change the user's username",
                "description": "Change the user's username.",
                "operationId": "28d3fffb59241595c2ccb870d61ec3e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "newUsername"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Username updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Username updated successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/change-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Change the user's password",
                "description": "Change the user's password.",
                "operationId": "86d9b8863e7776cd61b2af16cbec0f08",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "oldpassword"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Current password is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Current password is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/change-password-first-login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Change password for the first login",
                "description": "Change the password for the first admin login.",
                "operationId": "23fd9b45ca0e9a95f2d17523ab77809f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Password already changed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Already changed password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "id",
                    "name",
                    "email",
                    "is_admin",
                    "is_first_login",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the user",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "description": "Email verification timestamp",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "is_admin": {
                        "description": "Indicates if the user is an admin",
                        "type": "boolean"
                    },
                    "is_first_login": {
                        "description": "Indicates if this is the user's first login",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Kebab": {
                "title": "Kebab",
                "description": "Kebab model schema",
                "required": [
                    "id",
                    "name",
                    "address"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the kebab",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the kebab place",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address of the kebab place",
                        "type": "string"
                    },
                    "coordinates": {
                        "description": "Coordinates of the kebab place",
                        "type": "string"
                    },
                    "google_review": {
                        "description": "Google review rating",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "pyszne_pl_review": {
                        "description": "Pyszne.pl review rating",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "sauces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sauce"
                        }
                    },
                    "meatTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MeatType"
                        }
                    },
                    "socialMedias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SocialMedia"
                        }
                    },
                    "openingHours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpeningHour"
                        }
                    },
                    "orderWay": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderWay"
                        }
                    }
                },
                "type": "object"
            },
            "MeatType": {
                "description": "Meat type schema",
                "properties": {
                    "id": {
                        "description": "Meat type ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Meat type name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OpeningHour": {
                "description": "Opening hours schema",
                "properties": {
                    "day": {
                        "description": "Day of the week",
                        "type": "string"
                    },
                    "open": {
                        "description": "Opening time",
                        "type": "string",
                        "format": "time",
                        "nullable": true
                    },
                    "close": {
                        "description": "Closing time",
                        "type": "string",
                        "format": "time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderWay": {
                "description": "Order way schema",
                "properties": {
                    "id": {
                        "description": "Order way ID",
                        "type": "integer"
                    },
                    "app_name": {
                        "description": "App name for ordering",
                        "type": "string",
                        "nullable": true
                    },
                    "phone_number": {
                        "description": "Phone number for ordering",
                        "type": "string",
                        "nullable": true
                    },
                    "website": {
                        "description": "Website for ordering",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Sauce": {
                "description": "Sauce type schema",
                "properties": {
                    "id": {
                        "description": "Sauce ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Sauce name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SocialMedia": {
                "description": "Social media link schema",
                "properties": {
                    "id": {
                        "description": "Social media link ID",
                        "type": "integer"
                    },
                    "link": {
                        "description": "Social media URL",
                        "type": "string",
                        "format": "url"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Kebabs",
            "description": "Kebabs"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Admin",
            "description": "Admin"
        }
    ]
}